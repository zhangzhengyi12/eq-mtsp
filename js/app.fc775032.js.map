{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/paint/index.js","webpack:///./src/utils/index.js","webpack:///./src/config.js","webpack:///./src/routerManager/index.js","webpack:///./src/core/ga/router.js","webpack:///./src/core/ga/index.js","webpack:///./src/core/index.js","webpack:///./src/main.js"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","Paint","width","height","ctx","this","xMin","Infinity","xMax","yMin","yMax","loc","x","y","xRange","yRange","order","disMap","colorMap","clearRect","forEachAllEdges","e","index","isDone","fillStyle","beginPath","transX","transY","arc","Math","PI","fill","strokeStyle","nextNodeX","nextNodeY","moveTo","lineTo","stroke","record","font","text","toFixed","fillText","random","min","max","floor","randomSample","k","res","rd","includes","sort","a","b","getDisMap","map","innerMap","randomRange","count","range","newSp","v","rangeStart","rangeEnd","lineCount","startNodeName","popCount","RouterManager","utils","start","end","Number","酒店名称","filter","config","Router","paths","totalStore","breaks","instance","upper","RM","getLocations","fa","fb","every","Array","sum","routeIndex","getDisance","callback","forEachPaths","path","swapInsert","genPathsByBreakRanges","flipInset","leftSlideInsert","rightSlideInsert","getRouterRange","routers","segment","insertIndex","reverse","unshift","pop","locations","GA","population","fitness","recordDistance","bestEver","initPopulation","getRandomPopulation","reCalcFitness","fuck","getTotalDistance","console","log","pow","newPopulation","rdPopIndexs","_","shuffle","bestIndex","findBest","best","bestPops","getCopy","mutate","concat","indexs","list","prob","temp","forEach","startLocationKey","coreRun","ga","setupAxiosTransform","paint","getInstance","tick","run","draw","drawTotal","requestAnimationFrame","setup","setupPaint","canvas","document","createElement","body","appendChild","getContext","style"],"mappings":"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","file":"js/app.fc775032.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export default class Paint {\n  static getInstance() {\n    return new Paint(Paint.width, Paint.height, Paint.ctx)\n  }\n\n  static config(width, height, ctx) {\n    this.width = width\n    this.height = height\n    this.ctx = ctx\n  }\n\n  static setupAxiosTransform(data) {\n    let xMin = Infinity\n    let xMax = -Infinity\n    let yMin = Infinity\n    let yMax = -Infinity\n\n    for (let loc of data) {\n      if (loc.x < xMin) xMin = loc.x\n      if (loc.x > xMax) xMax = loc.x\n      if (loc.y < yMin) yMin = loc.y\n      if (loc.y > yMax) yMax = loc.y\n    }\n\n    this.xMin = xMin\n    this.xRange = xMax - xMin\n    this.yMin = yMin\n    this.yRange = yMax - yMin\n  }\n\n  static transX(x) {\n    return ((x - this.xMin) / this.xRange) * Paint.width + 20\n  }\n\n  static transY(y) {\n    return (1 - (((y - this.yMin) / this.yRange))) * Paint.height + 20\n  }\n\n  constructor(width, height, ctx) {\n    this.width = width\n    this.height = height\n    this.ctx = ctx\n    window.ctx = ctx\n  }\n\n  draw(order, disMap, colorMap) {\n    this.ctx.clearRect(0, 0, 1000, 1000)\n    order.forEachAllEdges((s, e, index, isDone) => {\n      if (s === '迪士尼') {\n        this.ctx.fillStyle = \"red\"\n      } else {\n        this.ctx.fillStyle = colorMap[index]\n      }\n\n      this.ctx.beginPath()\n      const x = Paint.transX(disMap[s].x)\n      const y = Paint.transY(disMap[s].y)\n      this.ctx.arc(x, y, 3, 0, Math.PI * 2, true)\n      this.ctx.fill()\n\n      if (isDone) { // 路径遍历已经结束  e 是最后一个节点\n        if (e === '迪士尼') {\n          this.ctx.fillStyle = \"red\"\n        } else {\n          this.ctx.fillStyle = colorMap[index]\n        }\n        this.ctx.beginPath()\n        const x = Paint.transX(disMap[e].x)\n        const y = Paint.transY(disMap[e].y)\n        this.ctx.arc(x, y, 3, 0, Math.PI * 2, true)\n        this.ctx.fill()\n      }\n\n      // 绘制到下一个节点的线\n      this.ctx.strokeStyle = colorMap[index]\n      const nextNodeX = Paint.transX(disMap[e].x)\n      const nextNodeY = Paint.transY(disMap[e].y)\n\n      this.ctx.beginPath()\n      this.ctx.moveTo(x, y)\n      this.ctx.lineTo(nextNodeX, nextNodeY)\n      this.ctx.stroke();\n    })\n  }\n\n  drawTotal(record) {\n    this.ctx.fillStyle = 'black'\n    ctx.font = \"24px serif\";\n    let text = `距离总和: ${(record / 1000).toFixed(1)}公里`\n    this.ctx.fillText(text, 900, 40)\n  }\n}","const random = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1)) + min\n}\n\n// 随机采样 生成 k 个唯一值 可能包涵 min 和 max 并建立排序\nconst randomSample = (min, max, k) => {\n  let res = []\n  for (let i = 0; i < k; i++) {\n    let rd\n    while (!rd || res.includes(rd)) {\n      rd = random(min, max)\n    }\n    res.push(rd)\n  }\n  res.sort((a, b) => a - b)\n  return res\n}\n\n// 不用矩阵，直接用 HASPMAP 空间换时间 节点不可能特别多 更容易 debug\nconst getDisMap = (data) => {\n  let map = {}\n  for (let loc of data) {\n    let innerMap = {\n      ...loc\n    }\n    map[loc['酒店名称']] = innerMap\n  }\n\n  return map\n}\n\n// 随机区间生成\nconst randomRange = (n, count) => {\n  let range = []\n  while (true) {\n    let newSp = random(1, n)\n    if (range.includes(newSp)) {\n      continue\n    }\n    range.push(newSp)\n    if (range.length >= count - 1) break\n  }\n\n  range.push(n)\n\n  return range.sort((a, b) => a - b).map((v, i) => {\n    let rangeStart = range[i - 1] ? range[i - 1] : 0\n    let rangeEnd = v\n    return rangeEnd - rangeStart\n  })\n}\n\nexport default {\n  random,\n  getDisMap,\n  randomRange,\n  randomSample\n}\n\n\n\n","export default {\n  lineCount: 4, // 旅行商数量\n  startNodeName: '迪士尼', // 起始节点\n  popCount: 500, // 人口数量\n}","import data from '../data/data.json'\nimport utils from '../utils'\nimport config from '../config'\n\n// 路径单例，路径数据源\nclass RouterManager {\n  constructor() {\n    this.disMap = utils.getDisMap(data)\n  }\n\n  // 获取从起点到终点的距离\n  getDisance(start, end) {\n    return Number(this.disMap[start][end])\n  }\n\n  // 获取地点数组 不包含起始节点\n  getLocations() {\n    return data.map(v => v.酒店名称).filter(v => v !== config.startNodeName)\n  }\n}\n\nexport default new RouterManager()","import RM from '../../routerManager'\nimport utils from '../../utils'\nimport config from '../../config'\nimport _ from 'loadsh'\n\n// 最终解决方案 人口的具象\nclass Router {\n  constructor(\n  ) {\n    this.paths = [] // 当前的路径\n    this.totalStore = [] // 当前的全部路径\n    this.breaks = [] // 当前的路径区间分配\n  }\n\n  /**\n   *\n   * @description 生成一个 初始随机人口\n   * @static\n   * @param {*} locations\n   * @memberof Population\n   */\n  static getRandomPopulation() {\n    const instance = new Router()\n    const locations = RM.getLocations()\n    instance.totalStore = locations\n    instance.breaks = instance.getRouterRange()\n    instance.genPathsByBreakRanges()\n    return instance\n  }\n\n  getCopy() {\n    let instance = new Router()\n    instance.paths = this.paths.map(v => v.slice())\n    instance.breaks = this.breaks.slice()\n    instance.totalStore = this.totalStore.slice()\n    return instance\n  }\n\n  // 获取一个随机化但是具有一定限制的区间\n  getRouterRange() {\n    const upper = (RM.getLocations().length)\n    const fa = upper / config.lineCount * 8\n    const fb = upper / config.lineCount * 0.01\n\n    let a = utils.randomRange(this.totalStore.length, config.lineCount)\n    while (true) {\n      if (a.every(i => i < fa && i > fb)) {\n        break\n      } else {\n        a = utils.randomRange(this.totalStore.length, config.lineCount)\n      }\n    }\n    return a\n  }\n\n  // 根据当前分隔区间和全部路由 重新分配到 paths 二维数组中\n  genPathsByBreakRanges() {\n    this.paths = new Array(this.breaks.length).fill(1).map(() => new Array())\n    let k = 0\n    for (let i = 0; i < this.breaks.length; i++) {\n      let range = this.breaks[i]\n      while (range--) {\n        this.paths[i].push(this.totalStore[k++])\n      }\n    }\n  }\n\n  // 获取该路由的总长度\n  getTotalDistance() {\n    let sum = 0\n    this.forEachAllEdges((a, b, routeIndex, isDone) => {\n      sum += RM.getDisance(a, b)\n    })\n    return sum\n  }\n\n  forEachPaths(callback) {\n    for (let i = 0; i < this.paths.length; i++) {\n      callback(this.paths[i], i)\n    }\n  }\n\n  forEachAllEdges(callback) {\n    this.forEachPaths((path, index) => {\n      let s = config.startNodeName\n      for (let i = 0; i < path.length; i++) {\n        let e = path[i]\n        callback(s, e, index, i === path.length - 1)\n        s = e\n      }\n    })\n  }\n\n  saveCurrentBreak() {\n    this.breaks = this.paths.map(path => path.length)\n  }\n\n  mutate(i) {\n    // // 第一种方式 选择随机区间然后随机插入\n    // // 复用之间的 break 重新生成 paths\n    if (i === 1) {\n      this.totalStore = this.swapInsert(this.totalStore)\n      this.genPathsByBreakRanges()\n    }\n\n    if (i === 2) {\n      this.totalStore = this.flipInset(this.totalStore)\n      this.genPathsByBreakRanges()\n    }\n\n    if (i === 3) {\n      this.totalStore = this.leftSlideInsert(this.totalStore)\n      this.genPathsByBreakRanges()\n    }\n\n    if (i === 4) {\n      this.totalStore = this.rightSlideInsert(this.totalStore)\n      this.genPathsByBreakRanges()\n    }\n\n    if (i === 5) {\n      this.breaks = this.getRouterRange()\n      this.genPathsByBreakRanges()\n    }\n\n    if (i === 6) {\n      this.totalStore = this.flipInset(this.totalStore)\n      this.breaks = this.getRouterRange()\n      this.genPathsByBreakRanges()\n    }\n\n    if (i === 7) {\n      this.totalStore = this.swapInsert(this.totalStore)\n      this.breaks = this.getRouterRange()\n      this.genPathsByBreakRanges()\n    }\n\n    if (i === 8) {\n      this.totalStore = this.leftSlideInsert(this.totalStore)\n      this.breaks = this.getRouterRange()\n      this.genPathsByBreakRanges()\n    }\n\n    if (i === 9) {\n      this.totalStore = this.rightSlideInsert(this.totalStore)\n      this.breaks = this.getRouterRange()\n      this.genPathsByBreakRanges()\n    }\n  }\n\n  // 在 total router 选择一个随机区间 最后随机插入\n  swapInsert(routers) {\n    const [i, j] = utils.randomSample(0, routers.length, 2)\n    const segment = routers.slice(i, j)\n    routers.splice(i, j - i)\n    const insertIndex = utils.random(0, routers.length - 1)\n    routers.splice(insertIndex, 0, ...segment)\n    return routers\n  }\n\n  // 在 total router 选择一个随机区间 然后反转 最后随机插入\n  flipInset(routers) {\n    const [i, j] = utils.randomSample(0, routers.length, 2)\n    const segment = routers.slice(i, j).reverse()\n    routers.splice(i, j - i)\n    const insertIndex = utils.random(0, routers.length - 1)\n    routers.splice(insertIndex, 0, ...segment)\n    return routers\n  }\n\n  // 在 total router 选择一个随机区间 然后将最右边的元素放到最左边 最后随机插入\n  leftSlideInsert(routers) {\n    const [i, j] = utils.randomSample(0, routers.length, 2)\n    const segment = routers.slice(i, j)\n    routers.splice(i, j - i)\n    segment.unshift(segment.pop())\n    const insertIndex = utils.random(0, routers.length - 1)\n    routers.splice(insertIndex, 0, ...segment)\n    return routers\n  }\n\n  // 在 total router 选择一个随机区间 然后将最右边的元素放到最左边 最后随机插入\n  rightSlideInsert(routers) {\n    const [i, j] = utils.randomSample(0, routers.length, 2)\n    const segment = routers.slice(i, j)\n    routers.splice(i, j - i)\n    segment.push(segment.shift())\n    const insertIndex = utils.random(0, routers.length - 1)\n    routers.splice(insertIndex, 0, ...segment)\n    return routers\n  }\n}\n\nexport default Router","import _ from 'loadsh'\nimport utils from '../../utils'\nimport Router from './router'\nimport config from '../../config'\n\nclass GA {\n  constructor(locations, lineCount, start, disMap) {\n    this.population = []\n    this.fitness = []\n    this.disMap = disMap\n    this.recordDistance = Infinity\n    this.bestEver = []\n    this.start = start\n    this.locations = locations\n    this.lineCount = lineCount\n\n    this.initPopulation()\n  }\n\n  // 初始化随机人口\n  initPopulation() {\n    for (let i = 0; i < config.popCount; i++) {\n      this.population[i] = Router.getRandomPopulation()\n    }\n  }\n\n  // run 开始算法核心\n  run() {\n    this.reCalcFitness()\n    this.fuck()\n  }\n\n  // 计算每个生物的健壮程度 值越高代表越健康越优秀\n  reCalcFitness() {\n    // 先计算每个生物的健壮程度 用距离反比\n    for (let i = 0; i < this.population.length; i++) {\n      let d = this.population[i].getTotalDistance()\n      if (d < this.recordDistance) {\n        this.recordDistance = d;\n        this.bestEver = this.population[i];\n        console.log(d)\n      }\n      this.fitness[i] = 1 / (Math.pow(d, 8) + 1);\n    }\n\n    // 然后进行归一化 保证健壮程度在[0,1]之间\n    let sum = 0;\n    for (let i = 0; i < this.fitness.length; i++) {\n      sum += this.fitness[i];\n    }\n    for (let i = 0; i < this.fitness.length; i++) {\n      this.fitness[i] = this.fitness[i] / sum;\n    }\n  }\n\n  // 择优突变\n  fuck() {\n    let newPopulation = []\n    let rdPopIndexs = _.shuffle(this.population.map((v, i) => i))\n    for (let i = 0; i < this.population.length; i += 10) {\n      // 随机抽取10个元素 找到其中最好的 然后复制出10个副本\n      const bestIndex = this.findBest(rdPopIndexs.slice(i, i + 10), this.fitness)\n      const best = this.population[bestIndex]\n      const bestPops = new Array(10).fill(1).map(() => best.getCopy())\n\n      // 对10个副本分别进行不同方式的基因突变\n      for (let i = 0; i < 10; i++) {\n        bestPops[i].mutate(i)\n      }\n      newPopulation = newPopulation.concat(bestPops)\n    }\n    this.population = newPopulation\n  }\n\n  findBest(indexs, fitness) {\n    let bestIndex = indexs[0]\n    for (let index of indexs) {\n      if (fitness[index] > fitness[bestIndex]) {\n        bestIndex = index\n      }\n    }\n    return bestIndex\n  }\n\n  // 按照fitness的健康程度 更大概率选择相对优质的基因\n  // 比如某个基因的健康程度为0.6那么大概就有60……的几率选中该基因\n  pickOne(list, prob) {\n    let index = 0;\n    let r = Math.random(1)\n\n    while (r > 0 && index <= list.length) {\n      r = r - prob[index];\n      index++;\n    }\n    index--;\n    return list[index]\n  }\n\n  swap(a, i, j) {\n    var temp = a[i];\n    a[i] = a[j];\n    a[j] = temp;\n  }\n\n  print() {\n    let res = `${this.start}=>`\n    this.forEach(this.bestEver, this.start, (a, b) => {\n      res += `${b}=>`\n    })\n    console.log(`${res} 最终距离: ${this.recordDistance} \\n`)\n  }\n\n  getPath() {\n    let res = [this.start]\n    this.forEach(this.bestEver, this.start, (a, b) => {\n      res.push(b)\n    })\n    return res\n  }\n}\n\nexport default GA","import data from '../data/data.json'\nimport GA from './ga'\nimport utils from '../utils'\nimport Paint from '../paint'\nimport Router from '../core/ga/router'\n\nconst startLocationKey = \"迪士尼\"\nconst lineCount = 4\nconst disMap = utils.getDisMap(data) // 距离哈希表 disMap[origin][target]\n\n\nconst colorMap = [\n  \"#FD0\",\n  '#6C0',\n  'blue',\n  'saddlebrown'\n]\n\nexport default function coreRun() {\n  let ga = new GA(data.map(v => v.酒店名称).filter(v => v !== '迪士尼'), lineCount, startLocationKey, disMap)\n  Paint.setupAxiosTransform(data)\n  let paint = Paint.getInstance()\n  const tick = () => {\n    ga.run()\n    paint.draw(ga.bestEver, disMap, colorMap)\n    paint.drawTotal(ga.recordDistance)\n    requestAnimationFrame(tick)\n  }\n  paint.drawTotal(ga.recordDistance)\n  tick()\n}","import Paint from './paint'\nimport coreRun from './core'\n// import Vue from 'vue';\n// import ElementUI from 'element-ui';\n// import 'element-ui/lib/theme-chalk/index.css';\n// import App from './preview/app';\n\n\nfunction setup() {\n  // Vue.use(ElementUI);\n\n  // window.$app = new Vue({\n  //   el: '#app',\n  //   render: h => h(App)\n  // })\n\n  setupPaint()\n  coreRun()\n}\n\nfunction setupPaint() {\n  const canvas = document.createElement('canvas')\n  document.body.appendChild(canvas)\n  const ctx = canvas.getContext('2d')\n  const width = 600\n  const height = 600\n  canvas.width = width\n  canvas.height = height\n  canvas.style.width = width + 'px'\n  canvas.style.height = height + 'px'\n  Paint.config(width - 30, height - 30, ctx)\n}\n\n\nsetup()"],"sourceRoot":""}